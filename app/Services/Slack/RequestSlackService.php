<?php

namespace App\Services\Slack;

use App\Models\User;

class RequestSlackService extends BaseSlackService
{
    /**
     * ุฅุฑุณุงู ุฅุดุนุงุฑ ุทูุจ ุนูู ุฅุถุงูู
     */
    public function sendOvertimeRequestNotification($request, User $targetUser, User $author, string $action): bool
    {
        $message = $this->buildOvertimeRequestMessage($request, $targetUser, $author, $action);

        // ุชุญุฏูุฏ context ุจูุงุกู ุนูู ููุน ุงูุนูููุฉ ูุงูุฑุฏ
        $context = $this->getOvertimeNotificationContext($request, $action, $author);
        $this->setNotificationContext($context);

        // ุงุณุชุฎุฏุงู Queue ูุชูููู ุงูุถุบุท ุนูู ุงููุธุงู
        return $this->sendSlackNotification($targetUser, $message, $context, true);
    }

    /**
     * ุฅุฑุณุงู ุฅุดุนุงุฑ ุทูุจ ุฅุฐู
     */
    public function sendPermissionRequestNotification($request, User $targetUser, User $author, string $action): bool
    {
        $message = $this->buildPermissionRequestMessage($request, $targetUser, $author, $action);

        // ุชุญุฏูุฏ context ุจูุงุกู ุนูู ููุน ุงูุนูููุฉ ูุงูุฑุฏ
        $context = $this->getPermissionNotificationContext($request, $action, $author);
        $this->setNotificationContext($context);

        // ุงุณุชุฎุฏุงู Queue ูุชูููู ุงูุถุบุท ุนูู ุงููุธุงู
        return $this->sendSlackNotification($targetUser, $message, $context, true);
    }

    /**
     * ุฅุฑุณุงู ุฅุดุนุงุฑ ุทูุจ ุบูุงุจ
     */
    public function sendAbsenceRequestNotification($request, User $targetUser, User $author, string $action): bool
    {
        $message = $this->buildAbsenceRequestMessage($request, $targetUser, $author, $action);

        // ุชุญุฏูุฏ context ุจูุงุกู ุนูู ููุน ุงูุนูููุฉ ูุงูุฑุฏ
        $context = $this->getAbsenceNotificationContext($request, $action, $author);
        $this->setNotificationContext($context);

        // ุงุณุชุฎุฏุงู Queue ูุชูููู ุงูุถุบุท ุนูู ุงููุธุงู
        return $this->sendSlackNotification($targetUser, $message, $context, true);
    }

    /**
     * ุจูุงุก ุฑุณุงูุฉ ุทูุจ ุงูุนูู ุงูุฅุถุงูู
     */
    private function buildOvertimeRequestMessage($request, User $targetUser, User $author, string $action): array
    {
        $actionEmoji = $this->getActionEmoji($action);
        $actionText = $this->getActionText($action);

        $overtimeDate = is_string($request->overtime_date) ? $request->overtime_date : $request->overtime_date->format('Y-m-d');
        $requestUrl = url("/overtime-requests/{$request->id}");

        return [
            'text' => "ุฅุดุนุงุฑ ุทูุจ ุนูู ุฅุถุงูู",
            'blocks' => [
                $this->buildHeader("$actionEmoji $actionText ุทูุจ ุนูู ุฅุถุงูู"),
                $this->buildInfoSection([
                    "*ุงูููุธู:*\n" . ($request->user ? $request->user->name : 'ุบูุฑ ูุญุฏุฏ'),
                    "*ุงูุชุงุฑูุฎ:*\n$overtimeDate"
                ]),
                $this->buildInfoSection([
                    "*ููุช ุงูุจุฏุงูุฉ:*\n" . ($request->start_time ?: 'ุบูุฑ ูุญุฏุฏ'),
                    "*ููุช ุงูููุงูุฉ:*\n" . ($request->end_time ?: 'ุบูุฑ ูุญุฏุฏ')
                ]),
                $this->buildInfoSection([
                    "*ุจูุงุณุทุฉ:*\n{$author->name}",
                    "*ุงูุญุงูุฉ:*\n" . $this->getStatusText($request, $action)
                ]),
                $this->buildTextSection("*ุงูุณุจุจ:*\n" . ($request->reason ?: 'ูุง ููุฌุฏ ุณุจุจ')),
                $this->buildActionsSection([
                    $this->buildActionButton('๐ ุนุฑุถ ุงูุทูุจ', $requestUrl)
                ]),
                $this->buildContextSection()
            ]
        ];
    }

    /**
     * ุจูุงุก ุฑุณุงูุฉ ุทูุจ ุงูุฅุฐู
     */
    private function buildPermissionRequestMessage($request, User $targetUser, User $author, string $action): array
    {
        $actionEmoji = $this->getActionEmoji($action);
        $actionText = $this->getActionText($action);

        $departureTime = is_string($request->departure_time) ? $request->departure_time : $request->departure_time->format('Y-m-d H:i');
        $returnTime = is_string($request->return_time) ? $request->return_time : $request->return_time->format('Y-m-d H:i');
        $requestUrl = url("/permission-requests/{$request->id}");

        return [
            'text' => "ุฅุดุนุงุฑ ุทูุจ ุฅุฐู",
            'blocks' => [
                $this->buildHeader("$actionEmoji $actionText ุทูุจ ุฅุฐู"),
                $this->buildInfoSection([
                    "*ุงูููุธู:*\n" . ($request->user ? $request->user->name : 'ุบูุฑ ูุญุฏุฏ'),
                    "*ุงููุฏุฉ:*\n" . ($request->minutes_used ?? 0) . " ุฏูููุฉ"
                ]),
                $this->buildInfoSection([
                    "*ููุช ุงููุบุงุฏุฑุฉ:*\n$departureTime",
                    "*ููุช ุงูุนูุฏุฉ:*\n$returnTime"
                ]),
                $this->buildInfoSection([
                    "*ุจูุงุณุทุฉ:*\n{$author->name}",
                    "*ุงูุญุงูุฉ:*\n" . $this->getStatusText($request, $action)
                ]),
                $this->buildTextSection("*ุงูุณุจุจ:*\n" . ($request->reason ?: 'ูุง ููุฌุฏ ุณุจุจ')),
                $this->buildActionsSection([
                    $this->buildActionButton('๐ ุนุฑุถ ุงูุทูุจ', $requestUrl)
                ]),
                $this->buildContextSection()
            ]
        ];
    }

    /**
     * ุจูุงุก ุฑุณุงูุฉ ุทูุจ ุงูุบูุงุจ
     */
    private function buildAbsenceRequestMessage($request, User $targetUser, User $author, string $action): array
    {
        $actionEmoji = $this->getActionEmoji($action);
        $actionText = $this->getActionText($action);

        $absenceDate = is_string($request->absence_date) ? $request->absence_date : $request->absence_date->format('Y-m-d');
        $requestUrl = url("/absence-requests/{$request->id}");

        return [
            'text' => "ุฅุดุนุงุฑ ุทูุจ ุบูุงุจ",
            'blocks' => [
                $this->buildHeader("$actionEmoji $actionText ุทูุจ ุบูุงุจ"),
                $this->buildInfoSection([
                    "*ุงูููุธู:*\n" . ($request->user ? $request->user->name : 'ุบูุฑ ูุญุฏุฏ'),
                    "*ุชุงุฑูุฎ ุงูุบูุงุจ:*\n$absenceDate"
                ]),
                $this->buildInfoSection([
                    "*ุจูุงุณุทุฉ:*\n{$author->name}",
                    "*ุงูุญุงูุฉ:*\n" . $this->getStatusText($request, $action)
                ]),
                $this->buildTextSection("*ุงูุณุจุจ:*\n" . ($request->reason ?: 'ูุง ููุฌุฏ ุณุจุจ')),
                $this->buildActionsSection([
                    $this->buildActionButton('๐ ุนุฑุถ ุงูุทูุจ', $requestUrl)
                ]),
                $this->buildContextSection()
            ]
        ];
    }

    /**
     * ุงูุญุตูู ุนูู ุฑูุฒ ุงูุฅุฌุฑุงุก
     */
    private function getActionEmoji(string $action): string
    {
        switch ($action) {
            case 'created': return '๐';
            case 'approved': return 'โ';
            case 'rejected': return 'โ';
            case 'modified': return 'โ๏ธ';
            case 'deleted': return '๐๏ธ';
            case 'reset': return '๐';
            default: return '๐ข';
        }
    }

    /**
     * ุงูุญุตูู ุนูู ูุต ุงูุฅุฌุฑุงุก
     */
    private function getActionText(string $action): string
    {
        switch ($action) {
            case 'created': return 'ุทูุจ ุฌุฏูุฏ';
            case 'approved': return 'ุชูุช ุงูููุงููุฉ ุนูู';
            case 'rejected': return 'ุชู ุฑูุถ';
            case 'modified': return 'ุชู ุชุนุฏูู';
            case 'deleted': return 'ุชู ุญุฐู';
            case 'reset': return 'ุชู ุฅุนุงุฏุฉ ุชุนููู';
            default: return 'ุฅุดุนุงุฑ ุญูู';
        }
    }

    /**
     * ุงูุญุตูู ุนูู ูุต ุงูุญุงูุฉ
     */
    private function getStatusText($request, string $action): string
    {
        switch ($action) {
            case 'approved':
                return 'โ ููุงูู ุนููู';
            case 'rejected':
                return 'โ ูุฑููุถ';
            case 'reset':
                return '๐ ุชู ุฅุนุงุฏุฉ ุงูุชุนููู';
            case 'created':
                return 'โณ ููุฏ ุงูุงูุชุธุงุฑ';
            case 'modified':
                return 'โ๏ธ ุชู ุงูุชุนุฏูู';
            default:
                return 'โณ ููุฏ ุงููุฑุงุฌุนุฉ';
        }
    }

        /**
     * ุชุญุฏูุฏ context ุงูุฅุดุนุงุฑ ููุฅุฌุงุฒุงุช ุจูุงุกู ุนูู ุงูุนูููุฉ ูุงููุณุชุฎุฏู
     */
    private function getAbsenceNotificationContext($request, string $action, User $author): string
    {
        // ุงูุชุญูู ูู ุฏูุฑ ุงููุคูู ูุชุญุฏูุฏ ููุน ุงูุฑุฏ
        $authorRole = $author->roles->first()?->name;

        // ุฅุฐุง ูุงู ุงูุนูู ุฅูุดุงุก ุทูุจ ุฌุฏูุฏ
        if ($action === 'created') {
            return 'ุฅุดุนุงุฑ ุทูุจ ุฅุฌุงุฒุฉ';
        }

        // ุฅุฐุง ูุงู ุฑุฏ ูู HR
        if ($authorRole === 'hr') {
            if ($action === 'approved') {
                return 'ุฅุดุนุงุฑ ุฑุฏ HR ุจุงูููุงููุฉ ุนูู ุงูุฅุฌุงุฒุฉ';
            } elseif ($action === 'rejected') {
                return 'ุฅุดุนุงุฑ ุฑุฏ HR ุจุฑูุถ ุงูุฅุฌุงุฒุฉ';
            } else {
                return 'ุฅุดุนุงุฑ ุฑุฏ HR ุนูู ุงูุฅุฌุงุฒุฉ';
            }
        }
        // ุฅุฐุง ูุงู ุฑุฏ ูู ูุฏูุฑ
        else {
            if ($action === 'approved') {
                return 'ุฅุดุนุงุฑ ุฑุฏ ุงููุฏูุฑ ุจุงูููุงููุฉ ุนูู ุงูุฅุฌุงุฒุฉ';
            } elseif ($action === 'rejected') {
                return 'ุฅุดุนุงุฑ ุฑุฏ ุงููุฏูุฑ ุจุฑูุถ ุงูุฅุฌุงุฒุฉ';
            } else {
                return 'ุฅุดุนุงุฑ ุฑุฏ ุงููุฏูุฑ ุนูู ุงูุฅุฌุงุฒุฉ';
            }
        }
    }

    /**
     * ุชุญุฏูุฏ context ุงูุฅุดุนุงุฑ ููุนูู ุงูุฅุถุงูู ุจูุงุกู ุนูู ุงูุนูููุฉ ูุงููุณุชุฎุฏู
     */
    private function getOvertimeNotificationContext($request, string $action, User $author): string
    {
        $authorRole = $author->roles->first()?->name;

        if ($action === 'created') {
            return 'ุฅุดุนุงุฑ ุทูุจ ุนูู ุฅุถุงูู';
        }

        if ($authorRole === 'hr') {
            if ($action === 'approved') {
                return 'ุฅุดุนุงุฑ ุฑุฏ HR ุจุงูููุงููุฉ ุนูู ุงูุนูู ุงูุฅุถุงูู';
            } elseif ($action === 'rejected') {
                return 'ุฅุดุนุงุฑ ุฑุฏ HR ุจุฑูุถ ุงูุนูู ุงูุฅุถุงูู';
            } else {
                return 'ุฅุดุนุงุฑ ุฑุฏ HR ุนูู ุงูุนูู ุงูุฅุถุงูู';
            }
        } else {
            if ($action === 'approved') {
                return 'ุฅุดุนุงุฑ ุฑุฏ ุงููุฏูุฑ ุจุงูููุงููุฉ ุนูู ุงูุนูู ุงูุฅุถุงูู';
            } elseif ($action === 'rejected') {
                return 'ุฅุดุนุงุฑ ุฑุฏ ุงููุฏูุฑ ุจุฑูุถ ุงูุนูู ุงูุฅุถุงูู';
            } else {
                return 'ุฅุดุนุงุฑ ุฑุฏ ุงููุฏูุฑ ุนูู ุงูุนูู ุงูุฅุถุงูู';
            }
        }
    }

    /**
     * ุชุญุฏูุฏ context ุงูุฅุดุนุงุฑ ููุฅุฐู ุจูุงุกู ุนูู ุงูุนูููุฉ ูุงููุณุชุฎุฏู
     */
    private function getPermissionNotificationContext($request, string $action, User $author): string
    {
        $authorRole = $author->roles->first()?->name;

        if ($action === 'created') {
            return 'ุฅุดุนุงุฑ ุทูุจ ุฅุฐู';
        }

        if ($authorRole === 'hr') {
            if ($action === 'approved') {
                return 'ุฅุดุนุงุฑ ุฑุฏ HR ุจุงูููุงููุฉ ุนูู ุงูุฅุฐู';
            } elseif ($action === 'rejected') {
                return 'ุฅุดุนุงุฑ ุฑุฏ HR ุจุฑูุถ ุงูุฅุฐู';
            } else {
                return 'ุฅุดุนุงุฑ ุฑุฏ HR ุนูู ุงูุฅุฐู';
            }
        } else {
            if ($action === 'approved') {
                return 'ุฅุดุนุงุฑ ุฑุฏ ุงููุฏูุฑ ุจุงูููุงููุฉ ุนูู ุงูุฅุฐู';
            } elseif ($action === 'rejected') {
                return 'ุฅุดุนุงุฑ ุฑุฏ ุงููุฏูุฑ ุจุฑูุถ ุงูุฅุฐู';
            } else {
                return 'ุฅุดุนุงุฑ ุฑุฏ ุงููุฏูุฑ ุนูู ุงูุฅุฐู';
            }
        }
    }
}
